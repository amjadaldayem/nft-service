"""Added NFT tables

Revision ID: 883765db3be1
Revises: 8fdef4b583c0
Create Date: 2021-12-01 20:53:14.840486

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '883765db3be1'
down_revision = '8fdef4b583c0'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('nft_attribute_def',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('name', sa.String(length=64), nullable=False),
    sa.Column('value', sa.String(length=127), nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', postgresql.TIMESTAMP(), server_default=sa.text('now()'), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_nft_attribute_def_name'), 'nft_attribute_def', ['name'], unique=False)
    op.create_index(op.f('ix_nft_attribute_def_value'), 'nft_attribute_def', ['value'], unique=False)
    op.create_table('nft_collection',
    sa.Column('id', postgresql.UUID(), server_default=sa.text('uuid_generate_v4()'), nullable=False),
    sa.Column('blockchain', sa.SmallInteger(), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=True),
    sa.Column('family', sa.String(length=100), nullable=True),
    sa.Column('slug', sa.String(length=127), nullable=True),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('update_authority', sa.String(length=127), nullable=True),
    sa.Column('seller_fee_basis_points', sa.Integer(), nullable=True, comment='Unit in 1/10000th, can be overridden by individual NFT.'),
    sa.Column('creators', postgresql.JSONB(astext_type=sa.Text()), nullable=True, comment='In format: [{"creator": <>, "share": <>}, ...].\n        Can be overridden by individual NFT.\n        '),
    sa.Column('created_at', postgresql.TIMESTAMP(), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', postgresql.TIMESTAMP(), server_default=sa.text('now()'), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_nft_collection_blockchain'), 'nft_collection', ['blockchain'], unique=False)
    op.create_index(op.f('ix_nft_collection_family'), 'nft_collection', ['family'], unique=False)
    op.create_index(op.f('ix_nft_collection_name'), 'nft_collection', ['name'], unique=False)
    op.create_index(op.f('ix_nft_collection_slug'), 'nft_collection', ['slug'], unique=False)
    op.create_index(op.f('ix_nft_collection_update_authority'), 'nft_collection', ['update_authority'], unique=False)
    op.create_table('nft',
    sa.Column('id', postgresql.UUID(), nullable=False),
    sa.Column('nft_collection_id', postgresql.UUID(), nullable=True),
    sa.Column('token_address', sa.String(length=127), nullable=True),
    sa.Column('name', sa.String(length=100), nullable=True),
    sa.Column('slug', sa.String(length=127), nullable=True),
    sa.Column('is_mutable', sa.Boolean(), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('metadata_uri', sa.Text(), nullable=True),
    sa.Column('animation_url', sa.Text(), nullable=True),
    sa.Column('external_url', sa.Text(), nullable=True),
    sa.Column('seller_fee_basis_points', sa.Integer(), nullable=True, comment='Unit in 1/10000th, can be overridden by individual NFT.'),
    sa.Column('creators', postgresql.JSONB(astext_type=sa.Text()), nullable=True, comment='In format: [{"creator": <>, "share": <>}, ...].\n        Can be overridden by individual NFT.\n        '),
    sa.Column('ext_data', postgresql.JSONB(astext_type=sa.Text()), nullable=True, comment='Extra data extracted from metadata content.\n        '),
    sa.Column('rarity_score_1', sa.String(length=16), nullable=True, comment='A rarity score'),
    sa.Column('created_at', postgresql.TIMESTAMP(), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', postgresql.TIMESTAMP(), server_default=sa.text('now()'), nullable=True),
    sa.ForeignKeyConstraint(['nft_collection_id'], ['nft_collection.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_nft_name'), 'nft', ['name'], unique=False)
    op.create_index(op.f('ix_nft_nft_collection_id'), 'nft', ['nft_collection_id'], unique=False)
    op.create_index(op.f('ix_nft_slug'), 'nft', ['slug'], unique=False)
    op.create_index(op.f('ix_nft_token_address'), 'nft', ['token_address'], unique=False)
    op.create_table('nft_attributes',
    sa.Column('pk', sa.BigInteger(), autoincrement=True, nullable=False),
    sa.Column('nft_id', postgresql.UUID(), nullable=True),
    sa.Column('nad_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['nad_id'], ['nft_attribute_def.id'], ),
    sa.ForeignKeyConstraint(['nft_id'], ['nft.id'], ),
    sa.PrimaryKeyConstraint('pk')
    )
    op.create_index(op.f('ix_nft_attributes_nad_id'), 'nft_attributes', ['nad_id'], unique=False)
    op.create_index(op.f('ix_nft_attributes_nft_id'), 'nft_attributes', ['nft_id'], unique=False)
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_nft_attributes_nft_id'), table_name='nft_attributes')
    op.drop_index(op.f('ix_nft_attributes_nad_id'), table_name='nft_attributes')
    op.drop_table('nft_attributes')
    op.drop_index(op.f('ix_nft_token_address'), table_name='nft')
    op.drop_index(op.f('ix_nft_slug'), table_name='nft')
    op.drop_index(op.f('ix_nft_nft_collection_id'), table_name='nft')
    op.drop_index(op.f('ix_nft_name'), table_name='nft')
    op.drop_table('nft')
    op.drop_index(op.f('ix_nft_collection_update_authority'), table_name='nft_collection')
    op.drop_index(op.f('ix_nft_collection_slug'), table_name='nft_collection')
    op.drop_index(op.f('ix_nft_collection_name'), table_name='nft_collection')
    op.drop_index(op.f('ix_nft_collection_family'), table_name='nft_collection')
    op.drop_index(op.f('ix_nft_collection_blockchain'), table_name='nft_collection')
    op.drop_table('nft_collection')
    op.drop_index(op.f('ix_nft_attribute_def_value'), table_name='nft_attribute_def')
    op.drop_index(op.f('ix_nft_attribute_def_name'), table_name='nft_attribute_def')
    op.drop_table('nft_attribute_def')
    # ### end Alembic commands ###
